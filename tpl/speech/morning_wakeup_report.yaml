>
  {# Morning Wakeup Report #}
  {%- macro getReport() -%}
    
    <p>
      Good morning.
    </p>

    <p>
       It is {{ now().strftime("%I:%M %p") }}
    </p>

    <p>
      The Weather in Kawagoodchi is {{ states('sensor.wbio_current_temperature') }} degrees 
      {% if is_state('weather.my_weather', 'rainy') %}
        {{ [
        'with rain.', 
        'with showers.'
        ] | random }}
      {% elif is_state('weather.my_weather', 'cloudy') %}
        {{ [
        'with clouds.', 
        'with cloudy skies.'
        ] | random }}
      {% elif is_state('weather.my_weather', 'partlycloudy') %}
        {{ [
        'with some clouds.', 
        'with partly cloudy skies.',
        'with scatterd clouds.'
        ] | random }}
      {% elif is_state('weather.my_weather', 'sunny') %}
        {% if is_state('sun.sun', 'above_horizon') %}
          {{ [
          'and sunny.', 
          'with sun.'
          ] | random }}
        {% else %}
          {{ [
          'and clear.', 
          'with clear skies.'
          ] | random }}
        {% endif %}
      {% else %}
        and {{ states('weather.my_weather') }}
      {% endif %}




      .Based on the forecasted high temperature, 
      {% if is_state('binary_sensor.morning','on') %}
        {% if is_state('sensor.clothing_forecast', 'Freezing') %}
          It is going to be freezing today. so I suggest wearing long pants and a heavy coat.
        {% elif is_state('sensor.clothing_forecast','Cold') %}
          It is going to be cold today. so I suggest wearing long pants and a light jacket.
        {% elif is_state('sensor.clothing_forecast', 'Chilly') %}
          It is going to be chilly today. so I suggest wearing at least long pants.
        {% elif is_state('sensor.clothing_forecast', 'Nice') %}
          It is going to be           
          {{ [ 'nice outside. ',
            'pretty nice outside. ',
            'a good day to be outside. ',
            'rather enjoyable outside. ',
          ] | random }} 
          So I suggest wearing shorts.
        {% elif is_state('sensor.clothing_forecast', 'Toasty') %}
          It is going to be 
          {{ [ 'bit warm ',
            ' rather warm outside ',
            ' almost too hot outside ',
            ' a little warm ',
          ] | random }} 
          today. So I suggest wearing shorts. 
        {% elif is_state('sensor.clothing_forecast', 'Hot') %}
          It is going to be 
          {{ [ 'hot',
            'hotter than the sun ',
            'hotter than hot. but in a lot of bad ways ',
            'hotter than the sun outside ',
            'super hot ',
            'hotter than the inside of a volcano '
          ] | random }} 
          today. So I suggest wearing shorts.
        {% else %}
          It is going to be {{ states('sensor.clothing_forecast') }} today so I suggest wearing shorts.
        {% endif %} 
      {% endif %}

    </p>

    <p>
      
    {% if is_state('input_boolean.school_today', 'on') and state_attr('input_datetime.school_day_end', 'timestamp') < as_timestamp(now()) %}
      {% if is_state('sensor.school_start_days2go', '0') %}
          Today is the first day of school! 
        {% else %}
          {{ [ 'Today is a school day.',
            'It is a school day. '
          ] | random }}
        {% endif %}
           Pickup today will be at {{(state_attr('input_datetime.school_day_end', 'timestamp') | int | timestamp_custom('%I:%M %p', False)) }}.
      {% if 'After School Care' in states('sensor.school_event') %}
        But will be at the After School Care.
      {% endif %} 
      {% if 'Walking Home' in states('sensor.school_event') %}
        But Sheon will be walking home from school.
      {% endif %}
      {% if states('sensor.school_end_days2go')| int == 0 -%}
        But today is the last day of School!
      {%- endif %}
    {% endif %}
    {% if is_state('input_boolean.school_today', 'on') and state_attr('input_datetime.school_day_end', 'timestamp') < as_timestamp(now()) and 'Digital Learning' not in states('sensor.school_event') %}
      {% if is_state('sensor.school_lunch', 'Nothing') %}
        I am not sure what the school menu is for today, so plan on She on taking his lunch 
      {% else %}
        Today's school lunch is {{ states('sensor.school_lunch') }}, lets hope Sheon is not too picky on his plate.
      {% endif %}
    {% endif %}

    {% if states('sensor.school_end_days2go')| int == -1 -%}
      Today is the first day of Summer Break! 
    {%- endif %}

    {% if 'School Off' in states('sensor.school_event') and  is_state('input_boolean.school_today', 'off') %}
      There is no school today.
    {% endif %} 

    {% if is_state('calendar.shion_events', 'on') %}
      Skylar has {{ state_attr('calendar.shion_events', 'message') }} today as well!
    {% endif %}
    </p>

    <p>
      {% if is_state('sensor.date_weekday', 'on') and is_state('calendar.holidays_in_japan', 'off') %}
         {%- if states('sensor.duc_destinations')|round > 48 %}
           Traffic to jcb office appears heavy than normnal.
         {% else %}
           Traffic to the jcb office is normal.
         {% endif %}
         Currently it will take {{states('sensor.duc_destinations')|round}} minutes to get to the office.

         {%- if not is_state('device_tracker.ie', 'home') %}
           Eddie appears to be enroute to work and
         {%- elif states('sensor.eri_destinations')|round > 71 %}
           Traffic to the costco headquarter appears heavy than normnal.
         {% else %}
           Traffic to the costco headquarter is normal.
         {% endif %}
         Currently it will take {{states('sensor.eri_destinations')|round}} minutes to get to costco.
      {% endif %}
    </p>

  {%- endmacro -%}


  {# a macro that removes all newline characters, empty spaces, and returns formatted text  #}
    {%- macro cleanup(data) -%}
      {%- for item in data.split("\n")  if item | trim != "" -%}
        {{ item | trim }} {% endfor -%}
  {%- endmacro -%}

  {# a macro to call all macros :)  #}
    {%- macro mother_of_all_macros() -%}
      {{ getReport() }}
    {%- endmacro -%}
    
    {# Call the macro  #}
    {{- cleanup(mother_of_all_macros()) -}}