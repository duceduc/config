# v2.0.1
# service reload_custom_templates to reload without rebooting.
#### PART 1 ########################################################################################################################
#
# This file consists of two parts.
# Only first part requires a modification from you. 
# To prioritize simplicity and compatibility, I have chosen to individually list all the entities to be monitored in the Header.
# Replace every "your_entity" with your personal entities IDs
# The second part may be changed but is intended for advanced users who wish to create smart rules for entities inclusion or exclusion.
#
####################################################################################################################################



############################
#
# SECURITY MONITORING
#
############################

# ALARMS :
{% set alarm_entity_ids = [
  'input_boolean.lockdown_issue',
  'input_boolean.security_issue',
  'alarm_control_panel.your_entity',
] %}

# DOORS & WINDOWS :
{% set contact_entity_ids = [
  'binary_sensor.livingroom_window',
  'binary_sensor.computerroom_window',
  'binary_sensor.genkan_door_contact',
  'binary_sensor.washer_door',
] %}

# PRESENCES:        
{% set occupancy_entity_ids = [
  'group.motion_kitchen_occupancy',
  'group.motion_showerroom_occupancy',
  'group.motion_genkan_occupancy',
  'binary_sensor.bt_proxy_computer_moving_target',
  'binary_sensor.sr_moving_target',
  'binary_sensor.lr_moving_target',
  'binary_sensor.mr_human_sensor_moving_target',
  'binary_sensor.wc_moving_target',
  'binary_sensor.hallway_moving_target',
  'binary_sensor.genkan_moving_target',

] %}

# LOCKS:        
{% set locks_entity_ids = [
  'binary_sensor.genkan_door_contact',
  'lock.your_entity',
] %}

############################
#
# AIR MONITORING
#
############################

# CLIMATES :
{% set climate_entity_ids = [
  'climate.sr_ac_mode', 
  'climate.lr_ac_mode', 
  'climate.mr_ac_mode',
] %}

# FANS :
{% set fan_entity_ids = [
  'fan.yuasa_fan',
  'fan.ceiling_fan_summer',
] %}

############################
#
# LIGHT
#
############################

# LIGHTBULBS :
{% set light_entity_ids = [
  'light.computer',
  'light.living',
  'light.shower',
  'light.laundry',
  'light.sink',
  'light.cabinet',
  'light.counter',
  'light.kitchen',
  'light.wc',
  'light.shion',
  'light.master',
  'light.master_closet',
  'light.hallway',
  'light.genkan',
  'light.storage',
  'light.night_light',
] %}

# COVERS :
{% set cover_entity_ids = [
'cover.living_room_curtain',
'cover.computer_room_curtain',
] %}

############################
#
# MEDIA PLAYERS MONITORING
#
############################

# AUDIO PLAYERS :
{% set audio_player_entity_ids = [
  'media_player.spotify_duc',
  'media_player.mediaroomsatellite',
] %}

# VIDEO PLAYERS :
{% set video_player_entity_ids = [
  'media_player.plex_plex_web_chrome_windows',
] %}

############################
#
# EQUIPMENT MONITORING
#
############################

# DEVICES (SWITCHES, VACUUMS, SENSORS, etc) :
{% set device_entity_ids = [
  'sensor.24hr_fan',
  'binary_sensor.desktop_status',
  'binary_sensor.jcom_tv',
] %}


    |   |
    |   |
    |   |    
    |   |
    |   |
    |   |
   \     /
    \   /
     \ /


### PART 2 #########################################################################################################################
#
# MACROS :
# Don't change the following code unless you have experience with Jinja2 templating. 
# Any incorrect modifications may lead to unpredictable results.
#
####################################################################################################################################


{% macro some_alarms_are_on() %}
  {% set triggered_count = namespace(value=0) %}
  {% set armed_count = namespace(value=0) %}
  {% for entity_id in alarm_entity_ids %}
    {% if is_state(entity_id, 'triggered') or is_state(entity_id, 'pending') %}
      {% set triggered_count.value = triggered_count.value + 1 %}
    {% elif states(entity_id).startswith('armed') %}
      {% set armed_count.value = armed_count.value + 1 %}
    {% endif %}
  {% endfor %}
  {% if triggered_count.value > 0 %}
    {{ 'on' ~ ',' ~ triggered_count.value }}
  {% else %}
    {{ 'off' if armed_count.value == 0 else 'armed' ~ ',' ~ armed_count.value }}
  {% endif %}
{% endmacro %}


{% macro some_contact_sensors_are_on() %}
  {% set count = namespace(value=0) %}
  {% for entity_id in contact_entity_ids %}
    {% if is_state(entity_id, 'on') %}
      {% set count.value = count.value + 1 %}
    {% endif %}
  {% endfor %}
  {{ 'off' if count.value == 0 else 'on' ~ ',' ~ count.value }}
{% endmacro %}


{% macro some_occupancy_sensors_are_on() %}
  {% set count = namespace(value=0) %}
  {% for entity_id in occupancy_entity_ids %}
    {% if is_state(entity_id, 'on') %}
      {% set count.value = count.value + 1 %}
    {% endif %}
  {% endfor %}
  {{ 'off' if count.value == 0 else 'on' ~ ',' ~ count.value }}
{% endmacro %}


{% macro some_locks_are_on() %}
  {% set count = namespace(value=0) %}
  {% for entity_id in locks_entity_ids %}
    {% if is_state(entity_id, 'unlocked') %}
      {% set count.value = count.value + 1 %}
    {% endif %}
  {% endfor %}
  {{ 'off' if count.value == 0 else 'on' ~ ',' ~ count.value }}
{% endmacro %}


{% macro some_climates_are_on() %}
  {% set ns = namespace(result='', count=0) %}
  {% for entity in climate_entity_ids %}
    {% set entity_state = states(entity) %}
    {% if ns.result %}
      {% set ns.result = ns.result ~ ', ' ~ entity_state %}
    {% else %}
      {% set ns.result = entity_state %}
    {% endif %}
    {% if entity_state in ['heat', 'cool', 'fan', 'dry', 'auto'] %}
      {% set ns.count = ns.count + 1 %}
    {% endif %}
  {% endfor %} 
  {% set dominant_state = 'off' %}
  {% if 'heat' in ns.result %} 
    {% set dominant_state = 'heat' %}
  {% elif 'auto' in ns.result %} 
    {% set dominant_state = 'auto' %}
  {% elif 'cool' in ns.result or 'fan' in ns.result %} 
    {% set dominant_state = 'cool' %}
  {% elif 'dry' in ns.result %} 
    {% set dominant_state = 'dry' %}
  {% endif %}
  {{ dominant_state }}, {{ ns.count }}
{% endmacro %}


{% macro some_fans_are_on() %}
  {% set count = namespace(value=0) %}
  {% for entity_id in fan_entity_ids %}
    {% if is_state(entity_id, 'on') %}
      {% set count.value = count.value + 1 %}
    {% endif %}
  {% endfor %}
  {{ 'off' if count.value == 0 else 'on' ~ ',' ~ count.value }}
{% endmacro %}


{% macro some_lights_are_on() %}
  {% set count = namespace(value=0) %}
  {% for entity_id in light_entity_ids %}
    {% if is_state(entity_id, 'on') %}
      {% set count.value = count.value + 1 %}
    {% endif %}
  {% endfor %}
  {% set state = 'off' if count.value == 0 else 'on' %}
  {{ state ~ ',' ~ count.value }}
{% endmacro %}


{% macro some_covers_are_on() %}
  {% set count = namespace(value=0) %}
  {% for entity_id in cover_entity_ids %}
    {% if is_state(entity_id, 'closed') %}
      {% set count.value = count.value + 1 %}
    {% endif %}
  {% endfor %}
  {{ 'off' if count.value == 0 else 'on' ~ ',' ~ count.value }}
{% endmacro %}


{% macro some_audio_players_are_on() %}
  {% set count = namespace(value=0) %}
  {% for entity_id in audio_player_entity_ids %}
    {% if is_state(entity_id, 'on') or is_state(entity_id, 'playing') or is_state(entity_id, 'buffering') or is_state(entity_id, 'paused') %}
      {% set count.value = count.value + 1 %}
    {% endif %}
  {% endfor %}
  {{ 'off' if count.value == 0 else 'on' ~ ',' ~ count.value }}
{% endmacro %}

{% macro some_video_players_are_on() %}
  {% set count = namespace(value=0) %}
  {% for entity_id in video_player_entity_ids %}
    {% if is_state(entity_id, 'on') or is_state(entity_id, 'playing') or is_state(entity_id, 'buffering') or is_state(entity_id, 'paused') %}
      {% set count.value = count.value + 1 %}
    {% endif %}
  {% endfor %}
  {{ 'off' if count.value == 0 else 'on' ~ ',' ~ count.value }}
{% endmacro %}


{% macro some_devices_are_on() %}
  {% set count = namespace(value=0) %}
  {% for entity_id in device_entity_ids %}
    {% if is_state(entity_id, 'on') or is_state(entity_id, 'cleaning') %}
      {% set count.value = count.value + 1 %}
    {% endif %}
  {% endfor %}
  {{ 'off' if count.value == 0 else 'on' ~ ',' ~ count.value }}
{% endmacro %}





