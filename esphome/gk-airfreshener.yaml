#  [ 24:ec:4a:ca:71:4c]
# change network ssid
# https://0xbadcoffee.se/blog/migrating-esphome-devices-to-a-new-network-ota

substitutions:
  name: gk-airfreshener
  room: Genkan

  temp_offset: "0"
  hum_offset: "0"
  # Timing Intervals: Adjust to suit your Need/Situation.
  # NOTE: Values MUST BE in "quotes"
  interval1: "5"
  interval2: "15"
  interval3: "30"
  interval4: "60"
  interval5: "120"
  # Plunger Pulse Duration. Range: 55-200
  squirt_pulse: "210ms"
  # Cannister Squirt Capacity
  maxSquirts: "280" #max 280

packages:
  aht10: !include components/aht10.yaml

<<: !include .base.yaml


# LD2410C
#uart:
#  #id: uart_0
#  tx_pin: TX #GPIO21 D6
#  rx_pin: RX #GPIO20 D7
#  baud_rate: 256000
#  parity: NONE
#  stop_bits: 1

#LD2410C
#ld2410:
#  id: ld2410_radar

i2c: # for aht10
  sda: GPIO6 #D4
  scl: GPIO7 #D5
  scan: true

esphome:
  name: $name
  platformio_options:
    board_build.flash_mode: dio
esp32:
  board: seeed_xiao_esp32c3
  variant: esp32c3
  framework:
    type: arduino
    platform_version: 5.4.0

globals:
  # Store the Cannister Percentage
  - id: squirts
    type: float
    restore_value: yes

  # Timer for Hold Button Reset
  - id: press_duration
    type: int
    restore_value: no
    initial_value: '0'

button:
  - platform: template
    name: $room Alt Button
    icon: mdi:restart
    on_press:
      then:
        - lambda: |-
            ESP_LOGD("Scent-a-Tron", "Can Percentage RESET");
            id(squirts) = 0;
            id(can_level).publish_state(100);
            global_preferences->sync();

binary_sensor: # not working for small glade
  # Unit's Top Button for local Manual "Squirts" and Resetting Cannister Percentage
  - platform: gpio
    name: $name Button
    disabled_by_default: true
    pin:
      number: GPIO9 # GPIO9 partial working
      inverted: True

    on_press:
      then:
        - lambda: |-
            id(press_duration) = millis();
    on_release:
      then:
        - lambda: |-
            if (millis() - id(press_duration) < 3000) {
            ESP_LOGD("Scent-a-Tron", "The Button Was Pressed!");
            id(theSquirter).turn_on();
            } else {
            ESP_LOGD("Scent-a-Tron", "Can Percentage RESET");
            id(squirts) = 0;
            id(can_level).publish_state(100);
            global_preferences->sync();
            }

#LD2410C
#  - platform: ld2410
#    has_target:
#      name: $room Presence
#    has_moving_target:
#      name: $room Moving Target
#    has_still_target:
#      name: $room Still Target

  - platform: status
    name: $name status


select:
  # Drop-Down Menu, "Select" in Home Assistant for Interval Automation
  - platform: template
    id: intervalSelect
    name: $name Interval
    icon: mdi:timer-outline
    optimistic: true
    restore_value: true
    options:
      - "Off"
      - $interval1 Minutes
      - $interval2 Minutes
      - $interval3 Minutes
      - $interval4 Minutes
      - $interval5 Minutes
    on_value:
      then:
        - script.execute: squirtTimer

script:
  # Script for Auto squirt
  - id: squirtTimer
    mode: restart
    then:
      - while:
          condition:
            lambda: 'return id(intervalSelect).state != "Off";'
          then:
            - delay: !lambda 'return atoi(id(intervalSelect).state.c_str()) * 60000;' # For testing. Default 60000
            # Fire off a Squirt
            - switch.turn_on: theSquirter

switch:
  # The Glade DC Motor
  - platform: gpio
    name: $name
    id: theSquirter
    icon: mdi:spray
    pin:
      number: GPIO10  #D10 confirm to work
    on_turn_on:
      then:
        - delay: $squirt_pulse
        - switch.turn_off: theSquirter
        - lambda: |-
            id(squirts) += 1;
            id(can_level).publish_state( (($maxSquirts-id(squirts))/$maxSquirts) * 100 );
            ESP_LOGD("Scent-a-Tron", "I Squirted!");
            global_preferences->sync();

sensor:
  - platform: wifi_signal
    name: $name wifi signal
    update_interval: 15s
    filters:
      - sliding_window_moving_average:
          window_size: 15
          send_every: 15

#LD2410C
#  - platform: ld2410
#    moving_distance:
#      name : $room Moving Distance
#    still_distance:
#      name: $room Still Distance
#    moving_energy:
#      name: Move Energy
#    still_energy:
#      name: $room Still Energy
#    detection_distance:
#      name: $room Detection Distance

  # Cannister Percentage
  - platform: template
    id: can_level
    name: $name Can
    device_class: volume
    unit_of_measurement: "Can"
    update_interval: $interval1 min
    lambda: |-
      return (($maxSquirts-id(squirts))/$maxSquirts) * 100;
