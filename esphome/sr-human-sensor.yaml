# This is a custom firmware for Human Presence Sensor 1U
# https://screek.io/1u
## web_server needs to be disabled for this esp32-S2##

substitutions:
  name: sr-human-sensor

esphome:
  name: $name
  platformio_options:
    board_build.flash_mode: dio
    board_build.f_cpu: 80000000L
  on_boot:
    priority: 900
    then:
       lambda: |-
        id(cpu_speed) = ESP.getCpuFreqMHz() ;
  project: 
    name: Screek.Human Presence Sensor
    version: 1w

#  NEED TO UPLOAD VIA CABLE DUE TO CHANGE IN PLATFORM
esp32:
  board: lolin_s2_mini

globals:
   - id: cpu_speed
     type: int
     restore_value: no
     initial_value: '0'

external_components:
  # - source: github://screek-workshop/custom_components_support_for_screek_1u
  - source:
      type: git
      url: https://github.com/screekworkshop/custom_components_support_for_screek_1w
      ref: main
    components: [ ld2410, uart ]

improv_serial:

logger:
  hardware_uart: uart0

wifi:
  ssid: !secret ssid
  password: !secret ssid_pwd
  power_save_mode: none

captive_portal:

api:
  encryption:
    key: !secret esphome_apikey

ota:
  - platform: esphome
    password: !secret ota_pass

# By automatically importing to the console, 
# subsequent adjustments can be easily made without having to manually fix a specific name.
#dashboard_import:
#  package_import_url: github://screekworkshop/screek-human-sensor/1u/yaml/Screek-Humen-Dectet-1u.yaml@2023.06
#  import_full_config: False

#web_server:
#  port: 80

binary_sensor:
  - platform: status # consolidate
    name: Online
    id: ink_ha_connected
  - platform: ld2410
    has_target:
      name: Presence
    has_moving_target:
      name: Moving Target
    has_still_target:
      name: Still Target

sensor:
  - platform: template
    name: ESP Cpu Speed
    accuracy_decimals: 0
    unit_of_measurement: Mhz
    lambda: |-
      return (id(cpu_speed));
    entity_category: "diagnostic"

  - platform: template
    id: sys_esp_temperature
    name: ESP Temperature
    lambda: return temperatureRead();
    unit_of_measurement: Â°C
    device_class: TEMPERATURE
    update_interval: 5s
    entity_category: "diagnostic"

  - platform: uptime
    name: Uptime
    id: sys_uptime
    update_interval: 10s

  - platform: wifi_signal # consolidate
    name: RSSI
    id: wifi_signal_db
    update_interval: 5s
    entity_category: "diagnostic"

  - platform: template
    id: esp_memory
    icon: mdi:memory
    name: ESP Free Memory
    lambda: return heap_caps_get_free_size(MALLOC_CAP_INTERNAL) / 1024;
    unit_of_measurement: 'kB'
    state_class: measurement
    entity_category: "diagnostic"

  - platform: ld2410
    moving_distance:
      name: Moving Distance
      id: moving_distance
      disabled_by_default: true
    still_distance:
      name: Still Distance
      id: still_distance
      disabled_by_default: true
    moving_energy:
      name: Move Energy
      disabled_by_default: true
    still_energy:
      name: Still Energy
      disabled_by_default: true
    detection_distance:
      name: Detection Distance
      disabled_by_default: true
    light:
      name: Sun Light

light:
  - platform: status_led
    name: sys_status
    pin: GPIO15
    internal: True
    restore_mode: ALWAYS_OFF

time:
  - platform: sntp
    id: time_sntp

uart:
  id: uart_ld2410
  tx_pin: GPIO18
  rx_pin: GPIO33
  baud_rate: 256000
  parity: NONE
  stop_bits: 1

ld2410:
  timeout: 150s
  id: ld2410_radar
  # max_move_distance : 6m
  # max_still_distance: 0.75m
  # g0_move_threshold: 10
  # g0_still_threshold: 20
  # g1_move_threshold: 10
  # g1_still_threshold: 20
  # g2_move_threshold: 20
  # g2_still_threshold: 21
  # g3_move_threshold: 30
  # g3_still_threshold: 31
  # g4_move_threshold: 40
  # g4_still_threshold: 41
  # g5_move_threshold: 50
  # g5_still_threshold: 51
  # g6_move_threshold: 60
  # g6_still_threshold: 61
  # g7_move_threshold: 70
  # g7_still_threshold: 71
  # g8_move_threshold: 80
  # g8_still_threshold: 81

button:
  - platform: template
    name: Enable LD2410 BLE
    # disabled_by_default: True
    entity_category: "config"
    icon: mdi:bluetooth
    on_press:
      lambda: |-
        id(ld2410_radar) -> ble_control(true);

  - platform: template
    name: Disable LD2410 BLE
    # disabled_by_default: True
    entity_category: "config"
    icon: mdi:bluetooth-off
    on_press:
      lambda: |-
        id(ld2410_radar) -> ble_control(false);

  - platform: template
    name: LD2410 Reboot
    icon: mdi:radar
    entity_category: "config"
    on_press:
      lambda: |-
        // auto* radar = LD2410Component::get(ld2410); 
        // radar -> roboot();
        id(ld2410_radar) -> reboot();

  - platform: restart
    icon: mdi:power-cycle
    name: ESP Reboot

  - platform: factory_reset
    disabled_by_default: True
    name: Factory Reset
    id: factory_reset_all