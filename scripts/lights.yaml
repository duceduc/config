#########################################################
#
#             Motion Kitchen Lights
#
#########################################################

  motion_kitchen_lights_illuminance_offline:
    alias: Motion Kitchen Lights Illuminance Offline
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: >
            {% if now().hour > 6 and now().hour < 10 %}
               light.counter, light.cabinet
            {% elif now().hour > 16 and now().hour < 21 %}
               light.counter, light.cabinet
            {% else %}
               light.k_1, light.k_3
            {% endif %}

#< 9 1 light
#<15 2 light
#<20 3 lights inline
#<25 3 lights over the counter
#<30 4 lights
#<45 all lights

#< 3 light
#< 6 lights (12 for pre lights)
#<11 3 lights inline
#<13 3 lights over the counter
#<17 4 lights
#<22 all lights

# setting up stage
#< 9 1 light
#<15 2 light
#<20 3 lights inline
#<25 3 lights over the counter
#<30 4 lights
#<45 all lights


# sensor replaced on 12/17/2023
  motion_kitchen_lights_illuminance_online:
    alias: Motion Kitchen Lights Illuminance Online
    sequence:
      - service: script.kitchen_status_on

      - service: light.turn_on
        data_template:
          entity_id: >
            {% if states.sensor.lr_radar_illuminance.state | float <= 0.09 %}
               light.k_1
            {% elif states.sensor.lr_radar_illuminance.state | float <= 0.15 %}
               light.k_1, light.k_3
            {% elif states.sensor.lr_radar_illuminance.state | float <= 0.20 %} 
               light.k_1, light.k_2, light.k_3
            {% elif states.sensor.lr_radar_illuminance.state | float <= 0.25 %}
               light.k_1, light.k_3, light.k_5
            {% elif states.sensor.lr_radar_illuminance.state | float <= 0.30 %}
               light.k_1, light.k_3, light.counter
            {% elif states.sensor.lr_radar_illuminance.state | float <= 0.45 %}
               light.counter, light.cabinet
            {% elif now().hour > 22 or now().hour < 5 %}
               light.k_1, light.k_3
            {% else %}
               light.counter, light.cabinet
            {% endif %}


## TESTING
  kitchen_status_on:
    sequence:
      - condition: template
        value_template: "{{ states('sensor.lr_radar_illuminance') == '0.01' }}"
      - service: light.turn_off
        data_template:
          entity_id: >
            {% set include_light = [
              'light.k_1',
              'light.k_2',
              'light.k_3',
              'light.k_4',
              'light.k_5'
            ] %}
            {%- for device in states.light|selectattr('entity_id','in',include_light)|rejectattr('state','in','off') %}{%- if loop.first %}{%- else %}, {% endif %}{{ device.entity_id }}{%- if loop.last %}{% endif %}{%- endfor  %}


#########################################################
#
#             Computer Room Lights Fade in
#
#########################################################

  cr_lights_fadein_day:
    alias: 'cr lights fadein_day'
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 1
          kelvin: 5000
      - delay:
          seconds: 1
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 64
          kelvin: 5000
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - delay: '00:00:{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 128
          kelvin: 5000
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - delay: '00:00:{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 151
          kelvin: 5000
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'

  cr_lights_fadein_night:
    alias: 'cr lights fadein_night'
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 1
          kelvin: 5000
      - delay:
          seconds: 1
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 64
          kelvin: 5000
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - delay: '00:00:{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 128
          kelvin: 5000
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - delay: '00:00:{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 191
          kelvin: 5000
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - delay: '00:00:{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 254
          kelvin: 5000
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'


#########################################################
#
#             Living Room Lights Fade
#
#########################################################


  lr_lights_fadein_day:
    alias: 'lr lights fadein_day'
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 1
      - delay:
          seconds: 1
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 64
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - delay: '00:00:{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 128
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - delay: '00:00:{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 181
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'

  lr_lights_fadein_night:
    alias: 'lr lights fadein_night'
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 1
      - delay:
          seconds: 1
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 64
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - delay: '00:00:{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 128
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - delay: '00:00:{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 191
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - delay: '00:00:{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - service: light.turn_on
        data_template:
          entity_id: light.{{ entity }}
          brightness: 254
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'



#########################################################
#
#             Tradfri Light Transitions
#
#########################################################

# https://community.home-assistant.io/t/tradfri-transition/17530/23

  tradfri_transition:
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: '{{ entity_id }}'
          brightness: '{{ brightness | int }}'
          transition: '{{ transition | int / 2 }}'
      - delay: '00:00:{{ transition | int / 2 + 1}}'
      - service: light.turn_on
        data_template:
          entity_id: '{{ entity_id }}'
          color_temp: '{{ color_temp | int }}'
          transition: '{{ transition | int / 2 }}'
    mode: parallel # default 10


#  tradfri_transition_down:
#    sequence:
#      - service: light.turn_off
#        data_template:
#          entity_id: '{{ entity_id }}'
#          transition: '{{ transition | int / 2 }}'
#      - delay: '00:00:{{ transition | int / 2 + 1}}'
#      - service: light.turn_off
#        data_template:
#          entity_id: '{{ entity_id }}'
#          transition: '{{ transition | int / 2 }}'
#    mode: parallel # default 10


#########################################################
#
#             Shion Room Alarm Lights [need using anymore]****
#
#########################################################

  wakeup_bedroom:
    alias: 'Wakeup lighting, smooth transition'
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: '{{ states("sensor.wakeup_map") }}'
          brightness: 1
          kelvin: 1000
      - delay:
          seconds: 1
      - service: light.turn_on
        data_template:
          entity_id: '{{ states("sensor.wakeup_map") }}'
          brightness: 64
          kelvin: 2000
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - delay: '00:00:{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - service: light.turn_on
        data_template:
          entity_id: '{{ states("sensor.wakeup_map") }}'
          brightness: 128
          kelvin: 3000
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - delay: '00:00:{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - service: light.turn_on
        data_template:
          entity_id: '{{ states("sensor.wakeup_map") }}'
          brightness: 191
          kelvin: 4000
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - delay: '00:00:{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'
      - service: light.turn_on
        data_template:
          entity_id: '{{ states("sensor.wakeup_map") }}'
          brightness: 254
          kelvin: 5000
          transition: '{{ (( states.input_number.wakeup_duration.state | float * 60 / 4 )| round ) | int }}'


#########################################################
#
#             Lights On Upon Arrival after Sunset
#
#########################################################

  turn_on_lr_lights:
    alias: Turn on LR lights
    sequence:
#      - service: light.turn_on
#        data_template:
#          entity_id: light.living
#          brightness: 255
      - service: scene.turn_on # Fix for living lights flashing at 100% bright.
        data:
          entity_id: scene.living_1_fix


      - service: script.christmas_lights_on
      - delay: 1
      - condition: template # Turn on pc/tv only if Duc is home & pc is not already on
        value_template: "{{ is_state('switch.momentary_activate_tv', 'on') and is_state('switch.desktop', 'off') }}"
      - service: switch.turn_on
        entity_id: switch.desktop
      - condition: template # Is NOT daylight
#        value_template: "{{ not is_state('sensor.period_of_the_day', 'daylight') }}"
        value_template: "{{ is_state('binary_sensor.evening', 'on') }}"
#      - condition: template # Eri not home
#        value_template: "{{ is_state('binary_sensor.eri_presence', 'off') and (now() - states.binary_sensor.eri_presence.last_changed).total_seconds() > 1*60 }}"
      - condition: template
        value_template: "{{ is_state('switch.jcom_tv', 'off') }}"
      - service: switch.turn_on
        data:
          entity_id: switch.jcom_tv_box_switch
      - delay: 10
      - service: script.tv_volume_down

#########################################################
#
#             Hallway Light Enable
#
#########################################################

  hallway_light_guest_mode_off:
    alias: Hallway Light Guest Mode Off
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: light.h_2
          brightness: '{% if now().hour > 19 or now().hour < 7 %} 50 {% else %} 200 {% endif %}'

  hallway_light_guest_mode_on:
    alias: Hallway Light Guest Mode On
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: light.h_2
          brightness: 200


#########################################################
#
#             Alarm Light Flash
#
#########################################################

  alarm_light_flash:
    sequence:
      - repeat:
          until:
            - condition: template
              value_template: "{{ is_state('input_boolean.sentry_mode', 'off') }}"
          sequence:
            - service: light.toggle
              data:
                entity_id: light.ntl_1
                color_name: red
                brightness: 254
            - delay: 2
      - service: script.returntonormal
        data:
          entity: light.ntl_1


#########################################################
#
#             Excercise Light Flash
#
#########################################################

  light_flash:
    alias: Light flash on
    sequence:
      - service: light.turn_on
        data:
          entity_id: '{{ states("sensor.exercise_map") }}'
      - delay:
          # time for flash light on
          seconds: 32
      - service: light.turn_off
        data:
          entity_id: '{{ states("sensor.exercise_map") }}'
      - service: script.turn_on
        data:
          entity_id: script.light_loop
  light_loop:
    alias: Light flash loop
    sequence:
      - delay:
          # time for flash light off
          seconds: 1
      - service: script.turn_on
        data:
          entity_id: script.light_flash

#########################################################
#
#             Dining Room Lights Toggle
#
#########################################################


  dining_lights_toggle:
    sequence:
      - service: script.dining_lights_mode
        data:
          entity: remote.rm4_remote
          device: Ceiling Fan

  dining_lights_mode:
    sequence:
      - service_template: >
           script.dining_lights_mode_{{ 'off' if is_state('counter.dining_lights_toggle', '3' ) else 'on' }}
        data_template:
          entity: '{{ entity }}'
          device: '{{ device }}'

  dining_lights_mode_on:
    sequence:
      - service: remote.send_command
        data:
          entity_id: '{{ entity }}'
          device: '{{ device }}'
          command: toggle lights
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.ceiling_fan_lights
#      - service: counter.increment
#        target:
#          entity_id: counter.dining_lights_toggle

  dining_lights_mode_off:
    sequence:
      - service: remote.send_command
        data:
          entity_id: '{{ entity }}'
          device: '{{ device }}'
          command: turn off lights
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.ceiling_fan_lights
#      - service: counter.reset
#        target:
#          entity_id: counter.dining_lights_toggle


#########################################################
#
#             Randomize Vacation Lights
#
#########################################################


  randomize_vacation_lights:
    sequence:
      - repeat:
          until:
            - condition: state
              entity_id: sun.sun
              state: 'above_horizon'
          sequence:
            - service: script.text_notify
              data:
                who: duc
                message: Running Vacation Lights
            - service: homeassistant.toggle
              data:
                entity_id: >
                  {{ expand('group.vacation_lights') | map(attribute='entity_id') | list | random }}
            - delay:
                minutes: '{{ range(1,3) | random | int }}'
      - service: homeassistant.turn_off
        entity_id: group.vacation_lights
    mode: single




#########################################################
#
#             Fade Out Light
#
#########################################################

  fadelightsoff:
    sequence:
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 25.5 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 25.5 | round(0) }} {% endif %}'
      - delay: '00:02:00'
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 25.5 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 25.5 | round(0) }} {% endif %}'
      - delay: '00:02:00'
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 25.5 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 25.5 | round(0) }} {% endif %}'
      - delay: '00:02:00'
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 25.5 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 25.5 | round(0) }} {% endif %}'
      - delay: '00:02:00'
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 25.5 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 25.5 | round(0) }} {% endif %}'
      - delay: '00:02:00'
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 25.5 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 25.5 | round(0) }} {% endif %}'
      - delay: '00:02:00'
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 10 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 10 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 10 | round(0) }} {% endif %}'
      - delay: '00:01:00'
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 10 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 10 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 10 | round(0) }} {% endif %}'
      - delay: '00:01:00'
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 10 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 10 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 10 | round(0) }} {% endif %}'
      - delay: '00:01:00'
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 10 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 10 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 10 | round(0) }} {% endif %}'
      - delay: '00:01:00'
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 10 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 10 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 10 | round(0) }} {% endif %}'
      - delay: '00:01:00'
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 10 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 10 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 10 | round(0) }} {% endif %}'
      - delay: '00:01:00'
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 10 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 10 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 10 | round(0) }} {% endif %}'
      - delay: '00:01:00'
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 10 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 10 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 25.5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 10 | round(0) }} {% endif %}'
      - delay: '00:01:00'
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 10 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 10 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 10 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 10 | round(0) }} {% endif %}'
      - delay: '00:00:30'
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 5 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 5| round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 5 | round(0) }} {% endif %}'
      - delay: '00:00:30'
      - service: light.turn_on
        entity_id: light.computer
        data_template:
          brightness: '{% if (states.light.computer.attributes.brightness - 5 | round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.brightness - 5 | round(0) }} {% endif %}'
          color_temp: '{% if (states.light.computer.attributes.color_temp - 5| round(0)) <0 %} 0 {% else %} {{ states.light.computer.attributes.color_temp - 5 | round(0) }} {% endif %}'
      - service: light.turn_on
        entity_id: light.computer
        data:
          color_temp: 0
      - service: light.turn_off
        entity_id: light.computer


#########################################################
#
#             Return Lights to Normal
#
#########################################################

  returntonormal:
    sequence:
      - service: script.normallight
        data_template:
          entity: '{{ entity }}'
      - delay: 1
      - service: light.turn_off
        data:
          entity_id: '{{ entity }}'

  normallight:
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: '{{ entity }}'
          rgb_color: [255, 212, 113]
      - delay: 1 # Needs delay for color blub to change brightness
      - service: light.turn_on
        data_template:
          entity_id: '{{ entity }}'
          brightness: 255


#########################################################
#
#             Christmas Lights
#
#########################################################

  christmas_lights_on:
    sequence:
      - service: switch.turn_on
        data:
          entity_id: switch.christmas_lights

  christmas_lights_off:
    sequence:
      - service: switch.turn_off
        data:
          entity_id: switch.christmas_lights


#########################################################
#
#             Turn off any active lights
#
#########################################################

  lights_out:
    sequence:
      - service: light.turn_off
        data_template:
          entity_id: >
            {% set exclude_light = [
              'light.genkan',
              'light.g_1'
            ] %}
            {%- for device in states.light|rejectattr('entity_id','in',exclude_light)|rejectattr('state','in','off') %}{%- if loop.first %}{%- else %}, {% endif %}{{ device.entity_id }}{%- if loop.last %}{% endif %}{%- endfor  %}


  pc_desktop_led:
    sequence:
      - repeat:
          while:
            - condition: state
              entity_id: light.pc_desktop_led
              state: "on"
          sequence:
            - service: light.turn_on
              data_template:
                entity_id: light.pc_desktop_led
                rgbw_color:
                  - "255"
                  - "{{ (range(0, 100)|random) }}"
                  - "{{ (range(0, 100)|random) }}"
                  - "0"
                brightness: "{{ (range(50, 250)|random) }}"
                transition: 0.3
            - delay: "{{ states.input_number.pc_desktop_led_speed.state }}"
            - service: light.turn_on
              data_template:
                entity_id: light.pc_desktop_led
                rgbw_color:
                  - "{{ (range(0, 100)|random) }}"
                  - "255"
                  - "{{ (range(0, 100)|random) }}"
                  - "0"
                brightness: "{{ (range(50, 250)|random) }}"
                transition: 0.3
            - delay: "{{ states.input_number.pc_desktop_led_speed.state }}"
            - service: light.turn_on
              data_template:
                entity_id: light.pc_desktop_led
                rgbw_color:
                  - "{{ (range(0, 100)|random) }}"
                  - "{{ (range(0, 100)|random) }}"
                  - "255"
                  - "0"
                brightness: "{{ (range(50, 250)|random) }}"
                transition: 0.3
            - delay: "{{ states.input_number.pc_desktop_led_speed.state }}"


#########################################################
#
#          END OF CONFIGURATION FILE
#
#########################################################